{"version":3,"sources":["images sync /^/.//.*$","images/beth.png","images/birdperson.png","images/evilmorty.png","images/gianthead.png","images/goldenford.png","images/jerry.png","images/jessica.png","images/meeseeks.png","images/morty.png","images/mr.png","images/rick.png","images/summer.png","components/Navbar/Navbar.js","components/Jumbotron/Jumbotron.js","components/Wrapper/Wrapper.js","components/Footer/Footer.js","components/Cards/Cards.js","App.js","serviceWorker.js","index.js"],"names":["map","./beth.png","./birdperson.png","./evilmorty.png","./gianthead.png","./goldenford.png","./jerry.png","./jessica.png","./meeseeks.png","./morty.png","./mr.png","./rick.png","./summer.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Navbar","props","react_default","a","createElement","className","href","message","indexOf","score","topScore","Jumbotron","containerStyle","display","flexFlow","justifyContent","alignContent","overflow","minHeight","width","margin","Wrapper","style","children","Footer","Cards","key","onClick","cardCount","src","require","image","alt","App","state","images","portraits","gameFinished","_this","forEach","card","count","setState","console","log","find","index","sort","Math","random","_this2","this","components_Navbar_Navbar","components_Jumbotron_Jumbotron","components_Wrapper_Wrapper","cards","components_Cards_Cards","components_Footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67da468d.chunk.js","sourcesContent":["var map = {\n\t\"./beth.png\": 20,\n\t\"./birdperson.png\": 21,\n\t\"./evilmorty.png\": 22,\n\t\"./gianthead.png\": 23,\n\t\"./goldenford.png\": 24,\n\t\"./jerry.png\": 25,\n\t\"./jessica.png\": 26,\n\t\"./meeseeks.png\": 27,\n\t\"./morty.png\": 28,\n\t\"./mr.png\": 29,\n\t\"./rick.png\": 30,\n\t\"./summer.png\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","module.exports = __webpack_public_path__ + \"static/media/beth.4d5e65a0.png\";","module.exports = __webpack_public_path__ + \"static/media/birdperson.612ba8d4.png\";","module.exports = __webpack_public_path__ + \"static/media/evilmorty.0657e1f4.png\";","module.exports = __webpack_public_path__ + \"static/media/gianthead.978b3847.png\";","module.exports = __webpack_public_path__ + \"static/media/goldenford.3774b39d.png\";","module.exports = __webpack_public_path__ + \"static/media/jerry.af8e8a84.png\";","module.exports = __webpack_public_path__ + \"static/media/jessica.a9644830.png\";","module.exports = __webpack_public_path__ + \"static/media/meeseeks.9667b7ee.png\";","module.exports = __webpack_public_path__ + \"static/media/morty.244deeda.png\";","module.exports = __webpack_public_path__ + \"static/media/mr.d61b2d5b.png\";","module.exports = __webpack_public_path__ + \"static/media/rick.06b65841.png\";","module.exports = __webpack_public_path__ + \"static/media/summer.afdbb7bf.png\";","import React from 'react'\nimport './Nav.css';\n\nconst Navbar = props => {\n    return (\n        <div>\n            <nav className=\"navbar\">\n                <ul>\n                    <li><h3><a href=\"/\">Clicky Game</a></h3></li>\n                    <li className ={props.message.indexOf(\"Wrong\") !== -1\n                    ? \"incorrectMessage\"\n                    : props.message.indexOf(\"Right\") !== 1\n                    ? \"correctMessage\" \n                    : \"normalMessage\"\n                    }>{props.message}</li>\n                    <li>Score: {props.score} | Topscore: {props.topScore}</li>\n                </ul>\n            </nav>\n        </div>\n    )\n};\n\nexport default Navbar\n\n","import React from 'react'\nimport './Jumbotron.css'\n\nconst Jumbotron = () => {\n    return (\n        <div>\n            <div className=\"jumbotron\">\n                <h1 className=\"display-4 text-center\">Clicky Game</h1>\n                <br/>\n                <h3 className=\"lead text-center\">Click on an image to earn points but don't click on it more than once</h3> \n            </div>\n        </div>\n    )\n};\n\nexport default Jumbotron;","import React from 'react'\n\n\nconst Wrapper = props => <div className=\"wrapper\" style={containerStyle}>{props.children}</div>;\n\n\nlet containerStyle = {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    justifyContent: \"space-around\",\n    alignContent: \"flex-start\",\n    overflow: \"auto\",\n    minHeight: \"80%\",\n    width: \"60%\",\n    margin: \"auto\",\n}\n\nexport default Wrapper;","import React from 'react'\nimport './Footer.css'\n\nconst Footer = () => {\n    return (\n        <div>\n            <div className=\"footer\" >\n                <h5><a href=\"/\" >Clicky Game</a></h5>\n            </div>\n        </div>\n    )\n};\n\nexport default Footer\n","import React, { Component } from 'react'\nimport './Cards.css'\n\nconst Cards = (props) => {\n    return (\n        <div key={props.id}>\n            <div className=\"card\" onClick={() => props.cardCount(props.id)}>\n                <div className=\"img-container\">\n                    <img src={require ('../../images/' + props.image)} \n                    className=\"img-fluid\" alt={props.id}/>\n                </div>\n            </div>\n        </div>\n    )\n};\n\n\n\nexport default Cards\n","import React, {Component} from 'react';\nimport Navbar from './components/Navbar/Navbar'\nimport Jumbotron from './components/Jumbotron/Jumbotron'\nimport Wrapper from './components/Wrapper/Wrapper'\nimport Footer from './components/Footer/Footer'\nimport portraits from './images.json'\nimport Cards from './components/Cards/Cards'\n\nclass App extends Component {\n\n  state = {\n    images: portraits,\n    score: 0,\n    topScore: 0,\n    message: \"Click an image to begin\"\n  }\n\n  gameFinished = () => {\n\n    this.state.images.forEach(card => {\n      card.count = 0;\n    });\n\n    //From Somat Thakali's code\n    this.setState({\n      topScore: this.state.score > this.state.topScore\n      ? this.state.score\n      : this.state.topScore, \n      score: 0,\n      message: \"Sorry, game over!\"\n    });\n  }\n\n  cardCount = id => {\n\n    console.log(\"This is the id \" + id);\n\n    var images = this.state.images;\n\n    images.find((image, index) => {\n      if (image.id === id) {\n        if (images[index].count === 0) {\n          images[index].count = images[index].count + 1;\n          this.setState({\n            score : this.state.score + 1,\n            message: \"Keep going!\"\n          });\n          images.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameFinished();\n        }\n      }\n    });\n\n  };\n\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Navbar score={this.state.score} topScore={this.state.topScore} message={this.state.message}/>\n        <Jumbotron />\n        <Wrapper>\n        {this.state.images.map(cards => (\n          <Cards key={cards.id} id={cards.id} image={cards.image} cardCount={this.cardCount}/>\n        ))}\n        </Wrapper> \n        \n        <Footer />\n      </div>\n    )\n  };\n};\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}